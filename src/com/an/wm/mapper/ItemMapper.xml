<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="WM.ItemMapper">
	<resultMap id="BaseResultMap" type="com.an.wm.entity.Item">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="pn" property="pn" jdbcType="VARCHAR" />
		<result column="barcode" property="barcode" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="sku_uom" property="skuUom" jdbcType="INTEGER" />
		<result column="cost_price" property="costPrice" jdbcType="NUMERIC" />
		<result column="sale_price" property="salePrice" jdbcType="NUMERIC" />
		<result column="supplier" property="supplier" jdbcType="VARCHAR" />
		<result column="storage_type" property="storageType" jdbcType="INTEGER" />
		<result column="shelf_life" property="shelfLife" jdbcType="INTEGER" />
		<result column="weight" property="weight" jdbcType="NUMERIC" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="enter_by" property="enterBy" jdbcType="INTEGER" />
		<result column="enter_at" property="enterAt" jdbcType="TIMESTAMP" />
	</resultMap>

	<sql id="Example_Where_Clause">
		<where>
			<if test="status != null and status != ''">
				status = #{status}
			</if>
			<if test="status == null">
				status != 'd'
			</if>
			<if test="_SH != null and _SH != ''">
				and (pn like concat('%', #{_SH}, '%') or name like concat('%', #{_SH}, '%'))
			</if>
			<if test="pn != null and pn != ''">
				and pn like concat('%', #{pn}, '%')
			</if>
			<if test="name != null and name != ''">
				and name like concat('%', #{name}, '%')
			</if>
			<if test="barcode != null and barcode != ''">
				and barcode like concat('%', #{barcode}, '%')
			</if>
		</where>
	</sql>

	<sql id="Base_Column_List">
		id, pn, barcode, name, type, 
		sku_uom, cost_price, sale_price, supplier, storage_type,
		shelf_life, weight, status, remark, enter_at
	</sql>

	<select id="selectByExample" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from WM_ITEM
		<include refid="Example_Where_Clause" />
		<if test="_BY != null">order by ${_BY}</if>
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="int">
		select
		<include refid="Base_Column_List" />
		from WM_ITEM
		where id = #{value}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="int">
		update WM_ITEM
		set
		status = 'd', enter_at = now()
		where id = #{value, jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="com.an.wm.entity.Item">
		insert into WM_ITEM (
			pn, barcode, name, type, 
			sku_uom, cost_price, sale_price, supplier,
			storage_type, shelf_life, weight, status, remark, enter_by, enter_at
		)
		values (
			#{pn,jdbcType=VARCHAR},
			#{barcode,jdbcType=VARCHAR},
			#{name,jdbcType=VARCHAR},
			#{type,jdbcType=VARCHAR},
			#{skuUom,jdbcType=INTEGER},
			#{costPrice,jdbcType=NUMERIC},
			#{salePrice,jdbcType=NUMERIC},
			#{supplier,jdbcType=VARCHAR},
			#{storageType,jdbcType=INTEGER},
			#{shelfLife,jdbcType=INTEGER},
			#{weight,jdbcType=NUMERIC},
			#{status,jdbcType=VARCHAR},
			#{remark,jdbcType=VARCHAR},
			#userId,
			now()
		)
		<selectKey resultType="int" keyProperty="id">
			SELECT @@IDENTITY AS id
		</selectKey>
	</insert>

	<select id="countByExample" parameterType="map" resultType="int">
		select count(*) from WM_ITEM
		<include refid="Example_Where_Clause" />
	</select>

	<update id="updateByPrimaryKey" parameterType="com.an.wm.entity.Item">
		update WM_ITEM set
		pn = #{pn,jdbcType=VARCHAR},
		barcode = #{barcode,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		type = #{type,jdbcType=VARCHAR},
		sku_uom = #{skuUom,jdbcType=INTEGER},
		cost_price = #{costPrice,jdbcType=NUMERIC},
		sale_price = #{salePrice,jdbcType=NUMERIC},
		supplier = #{supplier,jdbcType=VARCHAR},
		storage_type = #{storageType,jdbcType=INTEGER},
		shelf_life = #{shelfLife,jdbcType=INTEGER},
		weight = #{weight,jdbcType=NUMERIC},
		status = #{status,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		enter_by = #userId,
		enter_at = now()
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>